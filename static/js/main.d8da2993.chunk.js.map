{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","titleErr","descriptionErr","imgUrlErr","imdbUrlErr","imdbIdErr","imgUrlErrP","imdbUrlErrP","handleChange","event","target","name","value","err","errP","setState","handleBlur","handleBlurPattern","match","handleSubmit","preventDefault","props","addMovie","this","showAddBtn","onSubmit","onChange","onBlur","type","id","placeholder","style","color","e","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8da2993.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n\n    titleErr: false,\n    descriptionErr: false,\n    imgUrlErr: false,\n    imdbUrlErr: false,\n    imdbIdErr: false,\n\n    imgUrlErrP: false,\n    imdbUrlErrP: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    const err = `${name}Err`;\n    const errP = `${name}ErrP`;\n\n    this.setState({\n      [name]: value,\n      [err]: false,\n      [errP]: false,\n    });\n  };\n\n  handleBlur = (event) => {\n    const { name, value } = event.target;\n    const err = `${name}Err`;\n\n    this.setState({\n      [err]: !value,\n    });\n  };\n\n  handleBlurPattern = (event) => {\n    // eslint-disable-next-line\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const { name, value } = event.target;\n    const err = `${name}ErrP`;\n\n    if (value) {\n      this.setState({\n        [err]: !value.match(pattern),\n      });\n    }\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const movie = {\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      imdbUrl: this.state.imdbUrl,\n      imdbId: this.state.imdbId,\n    };\n\n    this.props.addMovie(movie);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n\n      titleErr: false,\n      descriptionErr: false,\n      imgUrlErr: false,\n      imdbUrlErr: false,\n      imdbIdErr: false,\n\n      imgUrlErrP: false,\n      imdbUrlErrP: false,\n    });\n  }\n\n  render() {\n    const movie = this.state;\n    const showAddBtn = !!(\n      movie.title\n      && movie.imgUrl\n      && movie.imdbUrl\n      && movie.imdbId\n      && !movie.titleErr\n      && !movie.descriptionErr\n      && !movie.imdbIdErr\n      && !movie.imgUrlErrP\n      && !movie.imdbUrlErrP\n    );\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h3>Put the form here </h3>\n        <br />\n\n        <input\n          value={movie.title}\n          name=\"title\"\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          type=\"text\"\n          id=\"title\"\n          className={movie.titleErr ? 'error input' : 'input'}\n          placeholder=\"Enter title\"\n        />\n        <br />\n        {movie.titleErr && <span style={{ color: 'red' }}>enter title</span>}\n        <br />\n\n        <input\n          value={movie.description}\n          name=\"description\"\n          onChange={this.handleChange}\n          type=\"text\"\n          id=\"description\"\n          className=\"input\"\n          placeholder=\"Enter description\"\n        />\n        <br />\n        <br />\n\n        <input\n          value={movie.imgUrl}\n          name=\"imgUrl\"\n          onChange={this.handleChange}\n          onBlur={(e) => {\n            this.handleBlur(e);\n            this.handleBlurPattern(e);\n          }}\n          type=\"text\"\n          id=\"imgUrl\"\n          className={\n            movie.imgUrlErr || movie.imgUrlErrP\n              ? 'error input'\n              : 'input'\n          }\n          placeholder=\"Enter imgUrl\"\n        />\n        <br />\n        {movie.imgUrlErr\n          && <span style={{ color: 'red' }}>enter image URL</span>\n        }\n        {movie.imgUrlErrP && (\n          <span style={{ color: 'red' }}>\n            enter correct image URL\n          </span>\n        )}\n        <br />\n\n        <input\n          value={movie.imdbUrl}\n          name=\"imdbUrl\"\n          onChange={this.handleChange}\n          onBlur={(e) => {\n            this.handleBlur(e);\n            this.handleBlurPattern(e);\n          }}\n          type=\"text\"\n          id=\"imdbUrl\"\n          className={\n            movie.imdbUrlErr || movie.imdbUrlErr\n              ? 'error input'\n              : 'input'\n          }\n          placeholder=\"Enter imdbUrl\"\n        />\n        <br />\n        {movie.imdbUrlErr\n          && <span style={{ color: 'red' }}>enter imdb URL</span>\n        }\n        {movie.imdbUrlErrP\n          && (\n            <span style={{ color: 'red' }}>\n              enter correct imdb URL\n            </span>\n          )\n        }\n        <br />\n\n        <input\n          value={movie.imdbId}\n          name=\"imdbId\"\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          type=\"text\"\n          id=\"imdbId\"\n          className={movie.imdbIdErr ? 'error input' : 'input'}\n          placeholder=\"Enter imdbId\"\n        />\n        <br />\n        {movie.imdbIdErr\n          && <span style={{ color: 'red' }}>enter imdb Id</span>\n        }\n        <br />\n\n        {showAddBtn\n          && (\n            <button type=\"submit\">\n              Add movie\n            </button>\n          )\n        }\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}